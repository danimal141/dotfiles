{
  "env": {
    "BASH_DEFAULT_TIMEOUT_MS": "300000",
    "BASH_MAX_TIMEOUT_MS": "1200000",
    "MAX_THINKING_TOKENS": "31999",
    "DISABLE_AUTOUPDATER": "1"
  },
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(find:*)",
      "Bash(ln:*)",
      "Bash(touch:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(diff:*)",
      "Bash(cmp:*)",
      "Bash(rsync:*)",
      "Bash(rg:*)",
      "Bash(ag:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(less:*)",
      "Bash(more:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(xxd:*)",
      "Bash(tar:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(ping:*)",
      "Bash(netstat:*)",
      "Bash(dig:*)",
      "Bash(lsof:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(whoami:*)",
      "Bash(whois:*)",
      "Bash(pwd:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(date:*)",
      "Bash(history:*)",
      "Bash(alias:*)",
      "Bash(env:*)",
      "Bash(export:*)",
      "Bash(source:*)",
      "Bash(tree:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(clippy:*)",
      "Bash(brew:*)",
      "Bash(direnv:*)",
      "Bash(asdf:*)",
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(node:*)",
      "Bash(deno:*)",
      "Bash(deno task:*)",
      "Bash(deno test:*)",
      "Bash(deno fmt:*)",
      "Bash(deno lint:*)",
      "Bash(deno compile:*)",
      "Bash(tsx:*)",
      "Bash(tsc:*)",
      "Bash(ts-node:*)",
      "Bash(eslint:*)",
      "Bash(prettier:*)",
      "Bash(biome:*)",
      "Bash(go:*)",
      "Bash(gofmt:*)",
      "Bash(golint:*)",
      "Bash(pip:*)",
      "Bash(uv:*)",
      "Bash(bundle:*)",
      "Bash(cargo-watch:*)",
      "Bash(cargo-edit:*)",
      "Bash(cargo-expand:*)",
      "Bash(make:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(kubectl:*)",
      "Bash(helm:*)",
      "Bash(terraform:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(git pull:*)",
      "Bash(git reset:*)",
      "Bash(git cherry-pick:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh issue create:*)",
      "Bash(gh issue edit:*)",
      "LS",
      "Grep",
      "Glob",
      "WebFetch",
      "WebSearch",
      "TodoRead",
      "TodoWrite",
      "mcp__context7",
      "mcp__playwright",
      "mcp__serena",
      "mcp__github__create_pull_request",
      "mcp__github__get_issue",
      "mcp__github__get_file_contents",
      "mcp__github__search_code",
      "mcp__github__add_issue_comment",
      "mcp__github__get_issue_comments"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf ~/*)",
      "Bash(rm -rf /*)",
      "Bash(rm -rf .git)",
      "Bash(shred:*)",
      "Bash(rm -f .:*)",
      "Bash(sudo rm:*)",
      "Bash(sudo dd:*)",
      "Bash(sudo mkfs:*)",
      "Bash(sudo fdisk:*)",
      "Bash(sudo mount:*)",
      "Bash(sudo umount:*)",
      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(fdisk:*)",
      "Bash(launchctl unload:*)",
      "Bash(launchctl stop:*)",
      "Bash(csrutil disable)",
      "Bash(nvram:*)",
      "Bash(sudo :*passwd:*)",
      "Bash(sudo :*shadow:*)",
      "Bash(chmod 777 /*)",
      "Bash(chown root:*)",
      "Bash(sudo chmod 777:*)",
      "Bash(sudo chown:*)",
      "Bash(sudo -i:*)",
      "Bash(sudo su:*)",
      "Bash(chmod 000:*)",
      "Bash(chmod -R 777:*)",
      "Bash(git push -f:*)",
      "Bash(git reset --hard HEAD~:*)",
      "Bash(git branch -D:*)",
      "Bash(git clean -fdx)",
      "Bash(docker system prune -af)",
      "Bash(npm publish:*)",
      "Bash(cargo publish:*)",
      "Bash(deno publish:*)",
      "Bash(terraform apply:*)",
      "Bash(brew uninstall --zap:*)",
      "Bash(brew cleanup --prune=all)",
      "Bash(export PATH=)",
      "Bash(unset PATH)",
      "Edit(/etc/**)",
      "Edit(/usr/**)",
      "Edit(/var/**)",
      "Edit(/opt/**)",
      "Edit(/bin/**)",
      "Edit(/sbin/**)",
      "Edit(/lib/**)",
      "Edit(/lib64/**)",
      "Edit(/boot/**)",
      "Edit(/proc/**)",
      "Edit(/sys/**)",
      "Edit(/dev/**)",
      "Edit(/System/**)",
      "Edit(/Library/LaunchDaemons/**)",
      "Edit(/private/**)",
      "Edit(.git/**)",
      "Edit(node_modules/**)",
      "Edit(vendor/**)",
      "Edit(bundle/**)",
      "Edit(.venv/**)",
      "Edit(venv/**)",
      "Edit(__pycache__/**)",
      "Edit(target/**)",
      "Edit(dist/**)",
      "Edit(build/**)",
      "Edit(.next/**)",
      "Edit(coverage/**)",
      "Edit(~/.ssh/id_*)",
      "Edit(~/.ssh/*_rsa)",
      "Edit(~/.ssh/*_ecdsa)",
      "Edit(~/.ssh/*_ed25519)",
      "Edit(/etc/passwd)",
      "Edit(/etc/shadow)",
      "Edit(/etc/sudoers)",
      "Edit(**/*key*)",
      "Edit(**/*secret*)",
      "Edit(**/*token*)",
      "Edit(**/*password*)",
      "Write(**/.env*)",
      "Read(**/.env*)"
    ]
  },
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/common-formatter.sh"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "terminal-notifier -sender com.apple.Terminal -title 'Claude Code' -message 'タスク完了です'"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "terminal-notifier -sender com.apple.Terminal -title 'Claude Code' -message 'ユーザ確認待ちです'"
          }
        ]
      }
    ]
  },
  "alwaysThinkingEnabled": true
}